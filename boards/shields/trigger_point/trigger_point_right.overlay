#include "trigger_point.dtsi"

&{/} {
    chosen {
        zmk,kscan            = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    /* right 5x6 matrix (put your real pins) */
    kscan_right: kscan_right {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;
        diode-direction = "col2row";
        row-gpios = <&pro_micro 5  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                    <&pro_micro 6  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                    <&pro_micro 7  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                    <&pro_micro 8  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                    <&pro_micro 9  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
                    
        col-gpios = <&pro_micro 19 GPIO_ACTIVE_HIGH>,
                    <&pro_micro 18 GPIO_ACTIVE_HIGH>,
                    <&pro_micro 15 GPIO_ACTIVE_HIGH>,
                    <&pro_micro 14 GPIO_ACTIVE_HIGH>,
                    <&pro_micro 16 GPIO_ACTIVE_HIGH>,
                    <&pro_micro 10 GPIO_ACTIVE_HIGH>;
    };

    /* three center-right direct keys: rows 1,2,4 @ column 7 */
    d_right_r1: d_right_r1 { compatible = "zmk,kscan-gpio-direct";
        input-gpios = <&pro_micro D0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; /* “7” */
    };
    d_right_r2: d_right_r2 { compatible = "zmk,kscan-gpio-direct";
        input-gpios = <&pro_micro D1 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; /* extra */
    };
    d_right_r4: d_right_r4 { compatible = "zmk,kscan-gpio-direct";
        input-gpios = <&pro_micro D0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; /* pot push */
    };

    kscan0: kscan_composite {
        compatible = "zmk,kscan-composite";
        rows = <5>;
        columns = <14>;
        wakeup-source;

        right { kscan = <&kscan_right>; row-offset = <0>; col-offset = <8>; };
        r_r1  { kscan = <&d_right_r1>;  row-offset = <1>; col-offset = <7>; };
        r_r2  { kscan = <&d_right_r2>;  row-offset = <2>; col-offset = <7>; };
        r_r4  { kscan = <&d_right_r4>;  row-offset = <4>; col-offset = <7>; };
    };
};
